server {
	server_name b24.iliasa.ru www.b24.iliasa.ru;
	server_name_in_redirect off;

	access_log /var/log/nginx/b24.access.log;
	error_log /var/log/nginx/b24.error.log;
    proxy_set_header	X-Real-IP        $remote_addr;
    proxy_set_header	X-Forwarded-For  $proxy_add_x_forwarded_for;
    proxy_set_header	Host $host;

    proxy_redirect ~^(http://[^:]+):\d+(/.+)$ $1$2;
    proxy_redirect ~^(https://[^:]+):\d+(/.+)$ $1$2;

    set $docroot		"/var/www/b24";
	
	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/b24;

	# Add index.php to the list if you are using PHP
	index index.php;
    # BXTEMP - personal settings
    include conf.d/bx_temp.conf;
    # Include parameters common to all websites
    include conf.d/bitrix.conf;
	

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/b24.iliasa.ru/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/b24.iliasa.ru/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}


#	location / {
#		try_files $uri $uri/ =404;
#	}
server {
    if ($host = www.b24.iliasa.ru) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = b24.iliasa.ru) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80;
	listen [::]:80;
	server_name b24.iliasa.ru www.b24.iliasa.ru;
    return 404; # managed by Certbot




}
